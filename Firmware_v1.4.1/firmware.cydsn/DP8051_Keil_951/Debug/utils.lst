C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UTILS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\utils.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -utils.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Keil_951\Debug/uti
                    -ls.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\utils.obj)

line level    source

   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017-2018, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         utils.h
  37          *
  38          * \brief        Definition of utility functions.
  39          * \date         February 01, 2018
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017-2018 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          #include <utils.h>
  46          #include <math.h>
  47          
  48          //--------------------------------------------------------------     DEFINITIONS
  49          
  50          //==============================================================================
  51          //                                                                       INVSQRT
  52          //==============================================================================
  53          float invSqrt(float x) {
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 2   

  54   1              float halfx = 0.5f * x;
  55   1              float y = x;
  56   1              long i = *(long*)&y;
  57   1              i = 0x5f3759df - (i>>1);
  58   1              y = *(float*)&i;
  59   1              y = y * (1.5f - (halfx * y * y));
  60   1              return y;
  61   1      }
  62          
  63          //==============================================================================
  64          //                                                                  V3_NORMALIZE
  65          //==============================================================================
  66          void v3_normalize(float v3_in[3]){
  67   1          // Vector 3 normalization
  68   1          float norm = invSqrt(v3_in[0] * v3_in[0] + v3_in[1] * v3_in[1] + v3_in[2] * v3_in[2]);
  69   1          
  70   1          v3_in[0] = v3_in[0]*norm;
  71   1          v3_in[1] = v3_in[1]*norm;
  72   1          v3_in[2] = v3_in[2]*norm;
  73   1      }
  74           
  75          //==============================================================================
  76          //                                                                  V4_NORMALIZE
  77          //==============================================================================
  78          void v4_normalize(float v4_in[4]){
  79   1          // Vector 4 normalization
  80   1          float norm = invSqrt(v4_in[0] * v4_in[0] + v4_in[1] * v4_in[1] + v4_in[2] * v4_in[2] + v4_in[3] * v4_i
             -n[3]);
  81   1          
  82   1          v4_in[0] = v4_in[0]*norm;
  83   1          v4_in[1] = v4_in[1]*norm;
  84   1          v4_in[2] = v4_in[2]*norm;
  85   1          v4_in[3] = v4_in[3]*norm;
  86   1      }
  87          
  88          /* [] END OF FILE */
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _invSqrt (BEGIN)
                                           ; SOURCE LINE # 53
0000 900000      R     MOV     DPTR,#x
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 54
0006 7F00              MOV     R7,#00H
0008 7E00              MOV     R6,#00H
000A 7D00              MOV     R5,#00H
000C 7C3F              MOV     R4,#03FH
000E 900000      R     MOV     DPTR,#x
0011 120000      E     LCALL   ?C?LLDXDATA0
0014 120000      E     LCALL   ?C?FPMUL
0017 900000      R     MOV     DPTR,#halfx
001A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 55
001D 900000      R     MOV     DPTR,#x
0020 120000      E     LCALL   ?C?LLDXDATA
0023 900000      R     MOV     DPTR,#y
0026 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 56
0029 900000      R     MOV     DPTR,#y
002C 120000      E     LCALL   ?C?LLDXDATA
002F 900000      R     MOV     DPTR,#i
0032 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 57
0035 900000      R     MOV     DPTR,#i
0038 120000      E     LCALL   ?C?LLDXDATA
003B 7801              MOV     R0,#01H
003D 120000      E     LCALL   ?C?SLSHR
0040 A804              MOV     R0,AR4
0042 A905              MOV     R1,AR5
0044 AA06              MOV     R2,AR6
0046 AB07              MOV     R3,AR7
0048 C3                CLR     C
0049 74DF              MOV     A,#0DFH
004B 9B                SUBB    A,R3
004C FF                MOV     R7,A
004D 7459              MOV     A,#059H
004F 9A                SUBB    A,R2
0050 FE                MOV     R6,A
0051 7437              MOV     A,#037H
0053 99                SUBB    A,R1
0054 FD                MOV     R5,A
0055 745F              MOV     A,#05FH
0057 98                SUBB    A,R0
0058 FC                MOV     R4,A
0059 900000      R     MOV     DPTR,#i
005C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 58
005F 900000      R     MOV     DPTR,#i
0062 120000      E     LCALL   ?C?LLDXDATA
0065 900000      R     MOV     DPTR,#y
0068 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 59
006B 900000      R     MOV     DPTR,#y
006E 120000      E     LCALL   ?C?LLDXDATA
0071 900000      R     MOV     DPTR,#halfx
0074 120000      E     LCALL   ?C?LLDXDATA0
0077 120000      E     LCALL   ?C?FPMUL
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 4   

007A 900000      R     MOV     DPTR,#y
007D 120000      E     LCALL   ?C?LLDXDATA0
0080 120000      E     LCALL   ?C?FPMUL
0083 A804              MOV     R0,AR4
0085 A905              MOV     R1,AR5
0087 AA06              MOV     R2,AR6
0089 AB07              MOV     R3,AR7
008B 7F00              MOV     R7,#00H
008D 7E00              MOV     R6,#00H
008F 7DC0              MOV     R5,#0C0H
0091 7C3F              MOV     R4,#03FH
0093 120000      E     LCALL   ?C?FPSUB
0096 900000      R     MOV     DPTR,#y
0099 120000      E     LCALL   ?C?LLDXDATA0
009C 120000      E     LCALL   ?C?FPMUL
009F 900000      R     MOV     DPTR,#y
00A2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 60
00A5 900000      R     MOV     DPTR,#y
00A8 120000      E     LCALL   ?C?LLDXDATA
                                           ; SOURCE LINE # 61
00AB         ?C0001:
00AB 22                RET     
             ; FUNCTION _invSqrt (END)

             ; FUNCTION _v3_normalize (BEGIN)
                                           ; SOURCE LINE # 66
0000 900000      R     MOV     DPTR,#v3_in
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 68
0006 900000      R     MOV     DPTR,#v3_in
0009 120000      E     LCALL   ?C?PLDXDATA
000C E9                MOV     A,R1
000D 2404              ADD     A,#04H
000F F9                MOV     R1,A
0010 EA                MOV     A,R2
0011 3400              ADDC    A,#00H
0013 FA                MOV     R2,A
0014 120000      E     LCALL   ?C?LLDPTR
0017 900000      R     MOV     DPTR,#v3_in
001A 120000      E     LCALL   ?C?PLDXDATA
001D E9                MOV     A,R1
001E 2404              ADD     A,#04H
0020 F9                MOV     R1,A
0021 EA                MOV     A,R2
0022 3400              ADDC    A,#00H
0024 FA                MOV     R2,A
0025 120000      E     LCALL   ?C?LLDPTR0
0028 120000      E     LCALL   ?C?FPMUL
002B C004              PUSH    AR4
002D C005              PUSH    AR5
002F C006              PUSH    AR6
0031 C007              PUSH    AR7
0033 900000      R     MOV     DPTR,#v3_in
0036 120000      E     LCALL   ?C?PLDXDATA
0039 120000      E     LCALL   ?C?LLDPTR
003C 900000      R     MOV     DPTR,#v3_in
003F 120000      E     LCALL   ?C?PLDXDATA
0042 120000      E     LCALL   ?C?LLDPTR0
0045 120000      E     LCALL   ?C?FPMUL
0048 A804              MOV     R0,AR4
004A A905              MOV     R1,AR5
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 5   

004C AA06              MOV     R2,AR6
004E AB07              MOV     R3,AR7
0050 D007              POP     AR7
0052 D006              POP     AR6
0054 D005              POP     AR5
0056 D004              POP     AR4
0058 120000      E     LCALL   ?C?FPADD
005B C004              PUSH    AR4
005D C005              PUSH    AR5
005F C006              PUSH    AR6
0061 C007              PUSH    AR7
0063 900000      R     MOV     DPTR,#v3_in
0066 120000      E     LCALL   ?C?PLDXDATA
0069 E9                MOV     A,R1
006A 2408              ADD     A,#08H
006C F9                MOV     R1,A
006D EA                MOV     A,R2
006E 3400              ADDC    A,#00H
0070 FA                MOV     R2,A
0071 120000      E     LCALL   ?C?LLDPTR
0074 900000      R     MOV     DPTR,#v3_in
0077 120000      E     LCALL   ?C?PLDXDATA
007A E9                MOV     A,R1
007B 2408              ADD     A,#08H
007D F9                MOV     R1,A
007E EA                MOV     A,R2
007F 3400              ADDC    A,#00H
0081 FA                MOV     R2,A
0082 120000      E     LCALL   ?C?LLDPTR0
0085 120000      E     LCALL   ?C?FPMUL
0088 A804              MOV     R0,AR4
008A A905              MOV     R1,AR5
008C AA06              MOV     R2,AR6
008E AB07              MOV     R3,AR7
0090 D007              POP     AR7
0092 D006              POP     AR6
0094 D005              POP     AR5
0096 D004              POP     AR4
0098 120000      E     LCALL   ?C?FPADD
009B 120000      R     LCALL   _invSqrt
009E 900000      R     MOV     DPTR,#norm
00A1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 70
00A4 900000      R     MOV     DPTR,#v3_in
00A7 120000      E     LCALL   ?C?PLDXDATA
00AA C003              PUSH    AR3
00AC C002              PUSH    AR2
00AE C001              PUSH    AR1
00B0 120000      E     LCALL   ?C?LLDPTR
00B3 900000      R     MOV     DPTR,#norm
00B6 120000      E     LCALL   ?C?LLDXDATA0
00B9 120000      E     LCALL   ?C?FPMUL
00BC D001              POP     AR1
00BE D002              POP     AR2
00C0 D003              POP     AR3
00C2 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 71
00C5 900000      R     MOV     DPTR,#v3_in
00C8 120000      E     LCALL   ?C?PLDXDATA
00CB E9                MOV     A,R1
00CC 2404              ADD     A,#04H
00CE F9                MOV     R1,A
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 6   

00CF EA                MOV     A,R2
00D0 3400              ADDC    A,#00H
00D2 FA                MOV     R2,A
00D3 120000      E     LCALL   ?C?LLDPTR
00D6 900000      R     MOV     DPTR,#norm
00D9 120000      E     LCALL   ?C?LLDXDATA0
00DC 120000      E     LCALL   ?C?FPMUL
00DF 900000      R     MOV     DPTR,#v3_in
00E2 120000      E     LCALL   ?C?PLDXDATA
00E5 E9                MOV     A,R1
00E6 2404              ADD     A,#04H
00E8 F9                MOV     R1,A
00E9 EA                MOV     A,R2
00EA 3400              ADDC    A,#00H
00EC FA                MOV     R2,A
00ED 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 72
00F0 900000      R     MOV     DPTR,#v3_in
00F3 120000      E     LCALL   ?C?PLDXDATA
00F6 E9                MOV     A,R1
00F7 2408              ADD     A,#08H
00F9 F9                MOV     R1,A
00FA EA                MOV     A,R2
00FB 3400              ADDC    A,#00H
00FD FA                MOV     R2,A
00FE 120000      E     LCALL   ?C?LLDPTR
0101 900000      R     MOV     DPTR,#norm
0104 120000      E     LCALL   ?C?LLDXDATA0
0107 120000      E     LCALL   ?C?FPMUL
010A 900000      R     MOV     DPTR,#v3_in
010D 120000      E     LCALL   ?C?PLDXDATA
0110 E9                MOV     A,R1
0111 2408              ADD     A,#08H
0113 F9                MOV     R1,A
0114 EA                MOV     A,R2
0115 3400              ADDC    A,#00H
0117 FA                MOV     R2,A
0118 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 73
011B 22                RET     
             ; FUNCTION _v3_normalize (END)

             ; FUNCTION _v4_normalize (BEGIN)
                                           ; SOURCE LINE # 78
0000 900000      R     MOV     DPTR,#v4_in
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 80
0006 900000      R     MOV     DPTR,#v4_in
0009 120000      E     LCALL   ?C?PLDXDATA
000C E9                MOV     A,R1
000D 2404              ADD     A,#04H
000F F9                MOV     R1,A
0010 EA                MOV     A,R2
0011 3400              ADDC    A,#00H
0013 FA                MOV     R2,A
0014 120000      E     LCALL   ?C?LLDPTR
0017 900000      R     MOV     DPTR,#v4_in
001A 120000      E     LCALL   ?C?PLDXDATA
001D E9                MOV     A,R1
001E 2404              ADD     A,#04H
0020 F9                MOV     R1,A
0021 EA                MOV     A,R2
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 7   

0022 3400              ADDC    A,#00H
0024 FA                MOV     R2,A
0025 120000      E     LCALL   ?C?LLDPTR0
0028 120000      E     LCALL   ?C?FPMUL
002B C004              PUSH    AR4
002D C005              PUSH    AR5
002F C006              PUSH    AR6
0031 C007              PUSH    AR7
0033 900000      R     MOV     DPTR,#v4_in
0036 120000      E     LCALL   ?C?PLDXDATA
0039 120000      E     LCALL   ?C?LLDPTR
003C 900000      R     MOV     DPTR,#v4_in
003F 120000      E     LCALL   ?C?PLDXDATA
0042 120000      E     LCALL   ?C?LLDPTR0
0045 120000      E     LCALL   ?C?FPMUL
0048 A804              MOV     R0,AR4
004A A905              MOV     R1,AR5
004C AA06              MOV     R2,AR6
004E AB07              MOV     R3,AR7
0050 D007              POP     AR7
0052 D006              POP     AR6
0054 D005              POP     AR5
0056 D004              POP     AR4
0058 120000      E     LCALL   ?C?FPADD
005B C004              PUSH    AR4
005D C005              PUSH    AR5
005F C006              PUSH    AR6
0061 C007              PUSH    AR7
0063 900000      R     MOV     DPTR,#v4_in
0066 120000      E     LCALL   ?C?PLDXDATA
0069 E9                MOV     A,R1
006A 2408              ADD     A,#08H
006C F9                MOV     R1,A
006D EA                MOV     A,R2
006E 3400              ADDC    A,#00H
0070 FA                MOV     R2,A
0071 120000      E     LCALL   ?C?LLDPTR
0074 900000      R     MOV     DPTR,#v4_in
0077 120000      E     LCALL   ?C?PLDXDATA
007A E9                MOV     A,R1
007B 2408              ADD     A,#08H
007D F9                MOV     R1,A
007E EA                MOV     A,R2
007F 3400              ADDC    A,#00H
0081 FA                MOV     R2,A
0082 120000      E     LCALL   ?C?LLDPTR0
0085 120000      E     LCALL   ?C?FPMUL
0088 A804              MOV     R0,AR4
008A A905              MOV     R1,AR5
008C AA06              MOV     R2,AR6
008E AB07              MOV     R3,AR7
0090 D007              POP     AR7
0092 D006              POP     AR6
0094 D005              POP     AR5
0096 D004              POP     AR4
0098 120000      E     LCALL   ?C?FPADD
009B C004              PUSH    AR4
009D C005              PUSH    AR5
009F C006              PUSH    AR6
00A1 C007              PUSH    AR7
00A3 900000      R     MOV     DPTR,#v4_in
00A6 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 8   

00A9 E9                MOV     A,R1
00AA 240C              ADD     A,#0CH
00AC F9                MOV     R1,A
00AD EA                MOV     A,R2
00AE 3400              ADDC    A,#00H
00B0 FA                MOV     R2,A
00B1 120000      E     LCALL   ?C?LLDPTR
00B4 900000      R     MOV     DPTR,#v4_in
00B7 120000      E     LCALL   ?C?PLDXDATA
00BA E9                MOV     A,R1
00BB 240C              ADD     A,#0CH
00BD F9                MOV     R1,A
00BE EA                MOV     A,R2
00BF 3400              ADDC    A,#00H
00C1 FA                MOV     R2,A
00C2 120000      E     LCALL   ?C?LLDPTR0
00C5 120000      E     LCALL   ?C?FPMUL
00C8 A804              MOV     R0,AR4
00CA A905              MOV     R1,AR5
00CC AA06              MOV     R2,AR6
00CE AB07              MOV     R3,AR7
00D0 D007              POP     AR7
00D2 D006              POP     AR6
00D4 D005              POP     AR5
00D6 D004              POP     AR4
00D8 120000      E     LCALL   ?C?FPADD
00DB 120000      R     LCALL   _invSqrt
00DE 900000      R     MOV     DPTR,#norm
00E1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 82
00E4 900000      R     MOV     DPTR,#v4_in
00E7 120000      E     LCALL   ?C?PLDXDATA
00EA C003              PUSH    AR3
00EC C002              PUSH    AR2
00EE C001              PUSH    AR1
00F0 120000      E     LCALL   ?C?LLDPTR
00F3 900000      R     MOV     DPTR,#norm
00F6 120000      E     LCALL   ?C?LLDXDATA0
00F9 120000      E     LCALL   ?C?FPMUL
00FC D001              POP     AR1
00FE D002              POP     AR2
0100 D003              POP     AR3
0102 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 83
0105 900000      R     MOV     DPTR,#v4_in
0108 120000      E     LCALL   ?C?PLDXDATA
010B E9                MOV     A,R1
010C 2404              ADD     A,#04H
010E F9                MOV     R1,A
010F EA                MOV     A,R2
0110 3400              ADDC    A,#00H
0112 FA                MOV     R2,A
0113 120000      E     LCALL   ?C?LLDPTR
0116 900000      R     MOV     DPTR,#norm
0119 120000      E     LCALL   ?C?LLDXDATA0
011C 120000      E     LCALL   ?C?FPMUL
011F 900000      R     MOV     DPTR,#v4_in
0122 120000      E     LCALL   ?C?PLDXDATA
0125 E9                MOV     A,R1
0126 2404              ADD     A,#04H
0128 F9                MOV     R1,A
0129 EA                MOV     A,R2
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 9   

012A 3400              ADDC    A,#00H
012C FA                MOV     R2,A
012D 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 84
0130 900000      R     MOV     DPTR,#v4_in
0133 120000      E     LCALL   ?C?PLDXDATA
0136 E9                MOV     A,R1
0137 2408              ADD     A,#08H
0139 F9                MOV     R1,A
013A EA                MOV     A,R2
013B 3400              ADDC    A,#00H
013D FA                MOV     R2,A
013E 120000      E     LCALL   ?C?LLDPTR
0141 900000      R     MOV     DPTR,#norm
0144 120000      E     LCALL   ?C?LLDXDATA0
0147 120000      E     LCALL   ?C?FPMUL
014A 900000      R     MOV     DPTR,#v4_in
014D 120000      E     LCALL   ?C?PLDXDATA
0150 E9                MOV     A,R1
0151 2408              ADD     A,#08H
0153 F9                MOV     R1,A
0154 EA                MOV     A,R2
0155 3400              ADDC    A,#00H
0157 FA                MOV     R2,A
0158 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 85
015B 900000      R     MOV     DPTR,#v4_in
015E 120000      E     LCALL   ?C?PLDXDATA
0161 E9                MOV     A,R1
0162 240C              ADD     A,#0CH
0164 F9                MOV     R1,A
0165 EA                MOV     A,R2
0166 3400              ADDC    A,#00H
0168 FA                MOV     R2,A
0169 120000      E     LCALL   ?C?LLDPTR
016C 900000      R     MOV     DPTR,#norm
016F 120000      E     LCALL   ?C?LLDXDATA0
0172 120000      E     LCALL   ?C?FPMUL
0175 900000      R     MOV     DPTR,#v4_in
0178 120000      E     LCALL   ?C?PLDXDATA
017B E9                MOV     A,R1
017C 240C              ADD     A,#0CH
017E F9                MOV     R1,A
017F EA                MOV     A,R2
0180 3400              ADDC    A,#00H
0182 FA                MOV     R2,A
0183 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 86
0186 22                RET     
             ; FUNCTION _v4_normalize (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    847    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      30
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.51   UTILS                                                                 04/01/2019 12:07:28 PAGE 10  

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
