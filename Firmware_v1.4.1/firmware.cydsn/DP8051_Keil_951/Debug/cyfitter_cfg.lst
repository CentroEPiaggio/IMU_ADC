C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) 
                    -PR(.\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) DF(CYAPP_ECC_OFFSET=1216) OJ(.\DP8051_Keil_951\Debug\cyfitter
                    -_cfg.obj)

line level    source

   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.2
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2018 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          
  26          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  27          
  28          
  29          #if defined(__C51__) || defined(__CX51__)
  30                  #define CYPACKED
  31                  #define CYPACKED_ATTR
  32                  #define CYALIGNED
  33                  #define DMAINITSEC
  34              #define CY_CFG_UNUSED
  35                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  36          
  37          
  38          
  39                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  40                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  41                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  42          #else
                      #error Unsupported toolchain
              #endif
  45          
  46          
  47          
  48          
  49          /* Clock startup error codes                                                   */
  50          #define CYCLOCKSTART_NO_ERROR    0u
  51          #define CYCLOCKSTART_XTAL_ERROR  1u
  52          #define CYCLOCKSTART_32KHZ_ERROR 2u
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 2   

  53          #define CYCLOCKSTART_PLL_ERROR   3u
  54          #define CYCLOCKSTART_FLL_ERROR   4u
  55          #define CYCLOCKSTART_WCO_ERROR   5u
  56          
  57          
  58          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  59          /*******************************************************************************
  60          * Function Name: CyClockStartupError
  61          ********************************************************************************
  62          * Summary:
  63          *  If an error is encountered during clock configuration (crystal startup error,
  64          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  65          *  the customer, this function will stop in an infinite loop.
  66          *
  67          * Parameters:
  68          *   void
  69          *
  70          * Return:
  71          *   void
  72          *
  73          *******************************************************************************/
  74          CY_CFG_UNUSED
  75          static void CyClockStartupError(uint8 errorCode);
  76          CY_CFG_UNUSED
  77          static void CyClockStartupError(uint8 errorCode)
  78          {
  79   1          /* To remove the compiler warning if errorCode not used.                */
  80   1          errorCode = errorCode;
  81   1      
  82   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  83   1          /* we will end up here to allow the customer to implement something to  */
  84   1          /* deal with the clock condition.                                       */
  85   1      
  86   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  89   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  90   1          /* `#START CyClockStartupError` */
  91   1      
  92   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  93   1          /* we will end up here to allow the customer to implement something to  */
  94   1          /* deal with the clock condition.                                       */
  95   1      
  96   1          /* `#END` */
  97   1      
  98   1          while(1) {}
  99   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 100   1      }
 101          #endif
 102          
 103          /* IDMUX Address: CYREG_IDMUX_DRQ_CTL0 Size (bytes): 6 */
 104          #define BS_IDMUX_VAL ((const uint8 CYFAR *)(0x00080000u + CYAPP_ECC_OFFSET))
 105          
 106          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
 107          #define BS_IOPORT_0_VAL ((const uint8 CYFAR *)(0x00080008u + CYAPP_ECC_OFFSET))
 108          
 109          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
 110          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)(0x00080010u + CYAPP_ECC_OFFSET))
 111          
 112          /* IOPORT_2 Address: CYDEV_PRTDSI_PRT2_BASE Size (bytes): 7 */
 113          #define BS_IOPORT_2_VAL ((const uint8 CYFAR *)(0x00080018u + CYAPP_ECC_OFFSET))
 114          
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 3   

 115          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 116          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)(0x00080020u + CYAPP_ECC_OFFSET))
 117          
 118          /* IOPORT_8 Address: CYDEV_PRTDSI_PRT15_BASE Size (bytes): 7 */
 119          #define BS_IOPORT_8_VAL ((const uint8 CYFAR *)(0x00080028u + CYAPP_ECC_OFFSET))
 120          
 121          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 122          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)(0x00080030u + CYAPP_ECC_OFFSET))
 123          
 124          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 125          #define BS_TMR0_VAL ((const uint8 CYFAR *)(0x00080038u + CYAPP_ECC_OFFSET))
 126          
 127          /* UDB_1_4_1_CONFIG Address: CYDEV_UCFG_B0_P1_U0_BASE Size (bytes): 128 */
 128          #define BS_UDB_1_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080044u + CYAPP_ECC_OFFSET))
 129          
 130          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 131          #define BS_UDB_1_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000800C4u + CYAPP_ECC_OFFSET))
 132          
 133          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 134          #define BS_UDB_1_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080144u + CYAPP_ECC_OFFSET))
 135          
 136          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 137          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000801C4u + CYAPP_ECC_OFFSET))
 138          
 139          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
 140          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080244u + CYAPP_ECC_OFFSET))
 141          
 142          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 143          #define BS_UDB_1_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000802C4u + CYAPP_ECC_OFFSET))
 144          
 145          /* UDB_0_3_0_CONFIG Address: CYDEV_UCFG_B0_P5_U0_BASE Size (bytes): 128 */
 146          #define BS_UDB_0_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080344u + CYAPP_ECC_OFFSET))
 147          
 148          /* UDB_0_3_1_CONFIG Address: CYDEV_UCFG_B0_P5_U1_BASE Size (bytes): 128 */
 149          #define BS_UDB_0_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000803C4u + CYAPP_ECC_OFFSET))
 150          
 151          /* UDB_0_4_1_CONFIG Address: CYDEV_UCFG_B0_P6_U0_BASE Size (bytes): 128 */
 152          #define BS_UDB_0_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080444u + CYAPP_ECC_OFFSET))
 153          
 154          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 155          #define BS_UDB_0_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000804C4u + CYAPP_ECC_OFFSET))
 156          
 157          /* UDB_0_5_0_CONFIG Address: CYDEV_UCFG_B0_P7_U0_BASE Size (bytes): 128 */
 158          #define BS_UDB_0_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080544u + CYAPP_ECC_OFFSET))
 159          
 160          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
 161          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000805C4u + CYAPP_ECC_OFFSET))
 162          
 163          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 164          #define BS_UDB_1_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080644u + CYAPP_ECC_OFFSET))
 165          
 166          /* UDB_1_0_1_CONFIG Address: CYDEV_UCFG_B1_P2_U1_BASE Size (bytes): 128 */
 167          #define BS_UDB_1_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000806C4u + CYAPP_ECC_OFFSET))
 168          
 169          /* UDB_1_1_1_CONFIG Address: CYDEV_UCFG_B1_P3_U0_BASE Size (bytes): 128 */
 170          #define BS_UDB_1_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080744u + CYAPP_ECC_OFFSET))
 171          
 172          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 173          #define BS_UDB_1_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000807C4u + CYAPP_ECC_OFFSET))
 174          
 175          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 176          #define BS_UDB_0_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080844u + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 4   

 177          
 178          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070u Size (bytes): 32 */
 179          #define BS_UWRK_B0_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x000808C4u + CYAPP_ECC_OFFSET))
 180          
 181          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070u Size (bytes): 32 */
 182          #define BS_UWRK_B1_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x000808E4u + CYAPP_ECC_OFFSET))
 183          
 184          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 185          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)(0x00080904u + CYAPP_ECC_OFFSET))
 186          
 187          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 188          #define BS_UCFG_BCTL0_VAL ((const uint8 CYFAR *)(0x00080914u + CYAPP_ECC_OFFSET))
 189          
 190          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080u Size (bytes): 128 */
 191          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080924u + CYAPP_ECC_OFFSET))
 192          
 193          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 194          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)(0x000809A4u + CYAPP_ECC_OFFSET))
 195          
 196          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080u Size (bytes): 128 */
 197          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080A24u + CYAPP_ECC_OFFSET))
 198          
 199          /* DSI0_2_HV_ROUTING Address: CYDEV_UCFG_DSI7_BASE + 0x00000080u Size (bytes): 128 */
 200          #define BS_DSI0_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080AA4u + CYAPP_ECC_OFFSET))
 201          
 202          /* DSISWITCH_0_3 Address: CYDEV_UCFG_DSI6_BASE Size (bytes): 128 */
 203          #define BS_DSISWITCH_0_3_VAL ((const uint8 CYFAR *)(0x00080B24u + CYAPP_ECC_OFFSET))
 204          
 205          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080u Size (bytes): 128 */
 206          #define BS_DSI0_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080BA4u + CYAPP_ECC_OFFSET))
 207          
 208          /* DSISWITCH_0_4 Address: CYDEV_UCFG_DSI5_BASE Size (bytes): 128 */
 209          #define BS_DSISWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00080C24u + CYAPP_ECC_OFFSET))
 210          
 211          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080u Size (bytes): 128 */
 212          #define BS_DSI0_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080CA4u + CYAPP_ECC_OFFSET))
 213          
 214          /* DSISWITCH_0_5 Address: CYDEV_UCFG_DSI4_BASE Size (bytes): 128 */
 215          #define BS_DSISWITCH_0_5_VAL ((const uint8 CYFAR *)(0x00080D24u + CYAPP_ECC_OFFSET))
 216          
 217          /* DSI0_5_HV_ROUTING Address: CYDEV_UCFG_DSI4_BASE + 0x00000080u Size (bytes): 128 */
 218          #define BS_DSI0_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080DA4u + CYAPP_ECC_OFFSET))
 219          
 220          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 221          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080E24u + CYAPP_ECC_OFFSET))
 222          
 223          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
 224          #define BS_UDBSWITCH_1_0_VAL ((const uint8 CYFAR *)(0x00080EA4u + CYAPP_ECC_OFFSET))
 225          
 226          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 227          #define BS_UDB_2_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080F24u + CYAPP_ECC_OFFSET))
 228          
 229          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 230          #define BS_UDBSWITCH_0_1_VAL ((const uint8 CYFAR *)(0x00080FA4u + CYAPP_ECC_OFFSET))
 231          
 232          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 233          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081024u + CYAPP_ECC_OFFSET))
 234          
 235          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 236          #define BS_UDBSWITCH_1_1_VAL ((const uint8 CYFAR *)(0x000810A4u + CYAPP_ECC_OFFSET))
 237          
 238          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 5   

 239          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081124u + CYAPP_ECC_OFFSET))
 240          
 241          /* UDB_1_2_HV_ROUTING Address: CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 242          #define BS_UDB_1_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000811A4u + CYAPP_ECC_OFFSET))
 243          
 244          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 245          #define BS_UDBSWITCH_1_2_VAL ((const uint8 CYFAR *)(0x00081224u + CYAPP_ECC_OFFSET))
 246          
 247          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 248          #define BS_UDB_2_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000812A4u + CYAPP_ECC_OFFSET))
 249          
 250          /* UDBSWITCH_0_3 Address: CYDEV_UCFG_B0_P5_ROUTE_BASE Size (bytes): 128 */
 251          #define BS_UDBSWITCH_0_3_VAL ((const uint8 CYFAR *)(0x00081324u + CYAPP_ECC_OFFSET))
 252          
 253          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 254          #define BS_UDB_1_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000813A4u + CYAPP_ECC_OFFSET))
 255          
 256          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 257          #define BS_UDBSWITCH_1_3_VAL ((const uint8 CYFAR *)(0x00081424u + CYAPP_ECC_OFFSET))
 258          
 259          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 260          #define BS_UDB_2_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000814A4u + CYAPP_ECC_OFFSET))
 261          
 262          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 263          #define BS_UDBSWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00081524u + CYAPP_ECC_OFFSET))
 264          
 265          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 266          #define BS_UDB_1_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000815A4u + CYAPP_ECC_OFFSET))
 267          
 268          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
 269          #define BS_UDBSWITCH_1_4_VAL ((const uint8 CYFAR *)(0x00081624u + CYAPP_ECC_OFFSET))
 270          
 271          /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 272          #define BS_UDB_2_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000816A4u + CYAPP_ECC_OFFSET))
 273          
 274          /* UDBSWITCH_0_5 Address: CYDEV_UCFG_B0_P7_ROUTE_BASE Size (bytes): 128 */
 275          #define BS_UDBSWITCH_0_5_VAL ((const uint8 CYFAR *)(0x00081724u + CYAPP_ECC_OFFSET))
 276          
 277          /* UDB_1_5_HV_ROUTING Address: CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 278          #define BS_UDB_1_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x000817A4u + CYAPP_ECC_OFFSET))
 279          
 280          /* UDB_2_5_HV_ROUTING Address: CYDEV_UCFG_B0_P0_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 281          #define BS_UDB_2_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081824u + CYAPP_ECC_OFFSET))
 282          
 283          /* DSISWITCH_1_0 Address: CYDEV_UCFG_DSI9_BASE Size (bytes): 128 */
 284          #define BS_DSISWITCH_1_0_VAL ((const uint8 CYFAR *)(0x000818A4u + CYAPP_ECC_OFFSET))
 285          
 286          /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080u Size (bytes): 128 */
 287          #define BS_DSI3_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081924u + CYAPP_ECC_OFFSET))
 288          
 289          /* DSISWITCH_1_1 Address: CYDEV_UCFG_DSI8_BASE Size (bytes): 128 */
 290          #define BS_DSISWITCH_1_1_VAL ((const uint8 CYFAR *)(0x000819A4u + CYAPP_ECC_OFFSET))
 291          
 292          /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080u Size (bytes): 128 */
 293          #define BS_DSI3_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081A24u + CYAPP_ECC_OFFSET))
 294          
 295          /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 296          #define BS_DSISWITCH_1_2_VAL ((const uint8 CYFAR *)(0x00081AA4u + CYAPP_ECC_OFFSET))
 297          
 298          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 299          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)(0x00081B24u + CYAPP_ECC_OFFSET))
 300          
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 6   

 301          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 302          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)(0x00081B2Cu + CYAPP_ECC_OFFSET))
 303          
 304          /* IOPINS0_8 Address: CYREG_PRT15_DM0 Size (bytes): 8 */
 305          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)(0x00081B34u + CYAPP_ECC_OFFSET))
 306          
 307          
 308          /*******************************************************************************
 309          * Function Name: cfg_dma_init
 310          ********************************************************************************
 311          * Summary:
 312          *  This function is used to copy device configuration data from constant values
 313          *  stored in memory into the proper chip configuration registers using DMA.  It
 314          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
 315          *
 316          * Parameters:  
 317          *   void
 318          *
 319          * Return:
 320          *   void
 321          *
 322          *******************************************************************************/
 323          static void cfg_dma_init(void);
 324          static void cfg_dma_init(void)
 325          {
 326   1              /* TD structure for big-endian systems. Requires 2-byte endian swap */
 327   1              CYPACKED struct td_t {
 328   1                      uint16 size;
 329   1                      uint8 flags;
 330   1                      uint8 next_td_ptr;
 331   1                      uint16 src;
 332   1                      uint16 dest;
 333   1              } CYPACKED_ATTR;
 334   1      
 335   1              /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080u Size (bytes): 128 */
 336   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] = {
 337   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x40u, 
 338   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 339   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 340   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 341   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 342   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 343   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 344   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 345   1      
 346   1              /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 347   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_3_VAL[] = {
 348   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 349   1                      0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 350   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 351   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 7   

             - 0x00u, 
 352   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x40u, 
 353   1                      0x00u, 0x00u, 0x80u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 354   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 355   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 356   1      
 357   1              /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080u Size (bytes): 128 */
 358   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_3_HV_ROUTING_VAL[] = {
 359   1                      0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x01u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x10u, 
 360   1                      0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x10u, 
 361   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x44u, 0x02u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 362   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 363   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 364   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x60u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 365   1                      0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x80u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 366   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 367   1      
 368   1              /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
 369   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] = {
 370   1                      0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 371   1                      0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 372   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 373   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 374   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 375   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x40u, 0x00u, 0x80u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 376   1                      0x00u, 0x00u, 0x00u, 0x08u, 0x10u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 377   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 378   1      
 379   1              /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080u Size (bytes): 128 */
 380   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] = {
 381   1                      0x00u, 0x00u, 0x00u, 0x80u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x08u, 
 382   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x10u, 
 383   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 384   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 385   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 386   1                      0x00u, 0x00u, 0x00u, 0x00u, 0xC0u, 0x00u, 0xE0u, 0x00u, 0xC0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 8   

 387   1                      0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 388   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 389   1      
 390   1              /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 391   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] = {
 392   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 393   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 394   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 395   1                      0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 396   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 397   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 398   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 399   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 400   1      
 401   1              /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080u Size (bytes): 128 */
 402   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] = {
 403   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 404   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 405   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 406   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 407   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x00u,
             - 0x00u, 
 408   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 409   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 410   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 411   1      
 412   1              /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 413   1              DMAINITSEC static const uint8 CYCODE CH1_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
             -, 0x00u };
 414   1      
 415   1              /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 416   1              DMAINITSEC static const uint8 CYCODE CH2_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
             -, 0x00u };
 417   1      
 418   1              /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 419   1              DMAINITSEC static const uint8 CYCODE CH4_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u
             -, 0x00u };
 420   1      
 421   1              /* PHUB_CH5_CFGMEM_CFG0/1 initialization data */
 422   1              DMAINITSEC static const uint8 CYCODE CH5_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u
             -, 0x00u };
 423   1      
 424   1              /* PHUB_CH6_CFGMEM_CFG0/1 initialization data */
 425   1              DMAINITSEC static const uint8 CYCODE CH6_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x01u
             -, 0x00u };
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 9   

 426   1      
 427   1              /* Initialization data for each DMA channel's TD registers */
 428   1              DMAINITSEC static const uint8 CYCODE DMA_TD_START_CMD[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x01u };
 429   1      
 430   1              CYALIGNED static uint32 CYXDATA DMA_ZERO_VAL;
 431   1      
 432   1              /* This table holds all of the initialization data necessary for the DMA
 433   1                 process to transfer data from the source location to the destination. */
 434   1              DMAINITSEC static const struct td_t CYCODE CFG_TD_LIST0[] = {
 435   1                      /* Size, Flags, Next, Source, Destination */
 436   1                      { 8u, 0x23u, 0x02u, (uint16)(uint32)(CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },      /* TD 1 */
 437   1                      { 8u, 0x23u, 0x03u, (uint16)(uint32)(CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },      /* TD 2 */
 438   1                      { 8u, 0x23u, 0x04u, (uint16)(uint32)(CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },      /* TD 3 */
 439   1                      { 8u, 0x23u, 0x05u, (uint16)(uint32)(CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },      /* TD 4 */
 440   1                      { 8u, 0x23u, 0x06u, (uint16)(uint32)(CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },      /* TD 5 */
 441   1                      { 5u, 0x23u, 0x07u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },   /* TD 6 */
 442   1                      { 5u, 0x23u, 0x08u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },   /* TD 7 */
 443   1                      { 5u, 0x23u, 0x09u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },   /* TD 8 */
 444   1                      { 5u, 0x23u, 0x0Au, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },   /* TD 9 */
 445   1                      { 5u, 0x23u, 0xFEu, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },   /* TD 10 *
             -/
 446   1                      { 64u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT3_DR) },        /* TD 11 */
 447   1                      { 384u, 0x22u, 0x0Du, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },    /* TD 12 */
 448   1                      { 384u, 0x22u, 0x0Eu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },    /* TD 13 */
 449   1                      { 128u, 0x22u, 0x0Fu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },    /* TD 14 */
 450   1                      { 384u, 0x22u, 0x10u, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },    /* TD 15 */
 451   1                      { 128u, 0x22u, 0x11u, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) },        /* TD 16 */
 452   1                      { 128u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },       /* TD 17 */
 453   1                      { 128u, 0x23u, 0x13u, (uint16)(uint32)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x0000
             -0080u) },        /* TD 18 */
 454   1                      { 128u, 0x23u, 0x14u, (uint16)(uint32)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) }, /* TD 19
             - */
 455   1                      { 128u, 0x23u, 0x15u, (uint16)(uint32)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x0000
             -0080u) },        /* TD 20 */
 456   1                      { 128u, 0x23u, 0x16u, (uint16)(uint32)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) }, /* TD 21
             - */
 457   1                      { 128u, 0x23u, 0x17u, (uint16)(uint32)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x0000
             -0080u) },        /* TD 22 */
 458   1                      { 128u, 0x23u, 0x18u, (uint16)(uint32)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) }, /* TD 23
             - */
 459   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x0000
             -0080u) },        /* TD 24 */
 460   1                      { 7u, 0x23u, 0x1Au, (uint16)(uint32)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) },      /* TD 25 */
 461   1                      { 7u, 0x23u, 0x1Bu, (uint16)(uint32)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) },      /* TD 26 */
 462   1                      { 7u, 0x23u, 0x1Cu, (uint16)(uint32)(BS_IOPORT_2_VAL), (uint16)(CYDEV_PRTDSI_PRT2_BASE) },      /* TD 27 */
 463   1                      { 6u, 0x23u, 0x1Du, (uint16)(uint32)(BS_IOPORT_7_VAL), (uint16)(CYDEV_PRTDSI_PRT12_BASE) },     /* TD 28 */
 464   1                      { 7u, 0x23u, 0x1Eu, (uint16)(uint32)(BS_IOPORT_8_VAL), (uint16)(CYDEV_PRTDSI_PRT15_BASE) },     /* TD 29 */
 465   1                      { 12u, 0x23u, 0x1Fu, (uint16)(uint32)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },        /* TD 30 */
 466   1                      { 32u, 0x23u, 0x20u, (uint16)(uint32)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BAS
             -E + 0x00000070u) },   /* TD 31 */
 467   1                      { 32u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BAS
             -E + 0x00000070u) },   /* TD 32 */
 468   1                      { 8u, 0x23u, 0x22u, (uint16)(uint32)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },       /* TD 33 */
 469   1                      { 128u, 0x23u, 0x23u, (uint16)(uint32)(BS_UDB_1_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U0_BASE) },  /
             -* TD 34 */
 470   1                      { 128u, 0x23u, 0x24u, (uint16)(uint32)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },  /
             -* TD 35 */
 471   1                      { 128u, 0x23u, 0x25u, (uint16)(uint32)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },  /
             -* TD 36 */
 472   1                      { 128u, 0x23u, 0x26u, (uint16)(uint32)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },  /
             -* TD 37 */
 473   1                      { 128u, 0x23u, 0x27u, (uint16)(uint32)(BS_UDB_1_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },  /
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 10  

             -* TD 38 */
 474   1                      { 128u, 0x23u, 0x28u, (uint16)(uint32)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },  /
             -* TD 39 */
 475   1                      { 128u, 0x23u, 0x29u, (uint16)(uint32)(BS_UDB_0_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U0_BASE) },  /
             -* TD 40 */
 476   1                      { 128u, 0x23u, 0x2Au, (uint16)(uint32)(BS_UDB_0_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U1_BASE) },  /
             -* TD 41 */
 477   1                      { 128u, 0x23u, 0x2Bu, (uint16)(uint32)(BS_UDB_0_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },  /
             -* TD 42 */
 478   1                      { 128u, 0x23u, 0x2Cu, (uint16)(uint32)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },  /
             -* TD 43 */
 479   1                      { 128u, 0x23u, 0x2Du, (uint16)(uint32)(BS_UDB_0_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },  /
             -* TD 44 */
 480   1                      { 128u, 0x23u, 0x2Eu, (uint16)(uint32)(BS_UDB_0_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U1_BASE) },  /
             -* TD 45 */
 481   1                      { 128u, 0x23u, 0x2Fu, (uint16)(uint32)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },  /
             -* TD 46 */
 482   1                      { 128u, 0x23u, 0x30u, (uint16)(uint32)(BS_UDB_1_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },  /
             -* TD 47 */
 483   1                      { 128u, 0x23u, 0x31u, (uint16)(uint32)(BS_UDB_1_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },  /
             -* TD 48 */
 484   1                      { 128u, 0x23u, 0x32u, (uint16)(uint32)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },  /
             -* TD 49 */
 485   1                      { 128u, 0x23u, 0x33u, (uint16)(uint32)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },  /
             -* TD 50 */
 486   1                      { 16u, 0x23u, 0x34u, (uint16)(uint32)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },     /* TD 51 */
 487   1                      { 16u, 0x23u, 0x35u, (uint16)(uint32)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },     /* TD 52 */
 488   1                      { 128u, 0x23u, 0x36u, (uint16)(uint32)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x000
             -00080u) },        /* TD 53 */
 489   1                      { 128u, 0x23u, 0x37u, (uint16)(uint32)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },        /* TD 5
             -4 */
 490   1                      { 128u, 0x23u, 0x38u, (uint16)(uint32)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x000
             -00080u) },        /* TD 55 */
 491   1                      { 128u, 0x23u, 0x39u, (uint16)(uint32)(BS_DSI0_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE + 0x0000
             -0080u) },        /* TD 56 */
 492   1                      { 128u, 0x23u, 0x3Au, (uint16)(uint32)(BS_DSISWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) }, /* TD 57
             - */
 493   1                      { 128u, 0x23u, 0x3Bu, (uint16)(uint32)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x0000
             -0080u) },        /* TD 58 */
 494   1                      { 128u, 0x23u, 0x3Cu, (uint16)(uint32)(BS_DSISWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) }, /* TD 59
             - */
 495   1                      { 128u, 0x23u, 0x3Du, (uint16)(uint32)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x0000
             -0080u) },        /* TD 60 */
 496   1                      { 128u, 0x23u, 0x3Eu, (uint16)(uint32)(BS_DSISWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) }, /* TD 61
             - */
 497   1                      { 128u, 0x23u, 0x3Fu, (uint16)(uint32)(BS_DSI0_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE + 0x0000
             -0080u) },        /* TD 62 */
 498   1                      { 128u, 0x23u, 0x40u, (uint16)(uint32)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 63 */
 499   1                      { 128u, 0x23u, 0x41u, (uint16)(uint32)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },  /
             -* TD 64 */
 500   1                      { 128u, 0x23u, 0x42u, (uint16)(uint32)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 65 */
 501   1                      { 128u, 0x23u, 0x43u, (uint16)(uint32)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },  /
             -* TD 66 */
 502   1                      { 128u, 0x23u, 0x44u, (uint16)(uint32)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 67 */
 503   1                      { 128u, 0x23u, 0x45u, (uint16)(uint32)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },  /
             -* TD 68 */
 504   1                      { 128u, 0x23u, 0x46u, (uint16)(uint32)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 69 */
 505   1                      { 128u, 0x23u, 0x47u, (uint16)(uint32)(BS_UDB_1_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE 
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 11  

             -+ 0x00000080u) },     /* TD 70 */
 506   1                      { 128u, 0x23u, 0x48u, (uint16)(uint32)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },  /
             -* TD 71 */
 507   1                      { 128u, 0x23u, 0x49u, (uint16)(uint32)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 72 */
 508   1                      { 128u, 0x23u, 0x4Au, (uint16)(uint32)(BS_UDBSWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE) },  /
             -* TD 73 */
 509   1                      { 128u, 0x23u, 0x4Bu, (uint16)(uint32)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 74 */
 510   1                      { 128u, 0x23u, 0x4Cu, (uint16)(uint32)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },  /
             -* TD 75 */
 511   1                      { 128u, 0x23u, 0x4Du, (uint16)(uint32)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 76 */
 512   1                      { 128u, 0x23u, 0x4Eu, (uint16)(uint32)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },  /
             -* TD 77 */
 513   1                      { 128u, 0x23u, 0x4Fu, (uint16)(uint32)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 78 */
 514   1                      { 128u, 0x23u, 0x50u, (uint16)(uint32)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },  /
             -* TD 79 */
 515   1                      { 128u, 0x23u, 0x51u, (uint16)(uint32)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 80 */
 516   1                      { 128u, 0x23u, 0x52u, (uint16)(uint32)(BS_UDBSWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE) },  /
             -* TD 81 */
 517   1                      { 128u, 0x23u, 0x53u, (uint16)(uint32)(BS_UDB_1_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 82 */
 518   1                      { 128u, 0x23u, 0x54u, (uint16)(uint32)(BS_UDB_2_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 83 */
 519   1                      { 128u, 0x23u, 0x55u, (uint16)(uint32)(BS_DSISWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) }, /* TD 84
             - */
 520   1                      { 128u, 0x23u, 0x56u, (uint16)(uint32)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x0000
             -0080u) },        /* TD 85 */
 521   1                      { 128u, 0x23u, 0x57u, (uint16)(uint32)(BS_DSISWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE) }, /* TD 86
             - */
 522   1                      { 128u, 0x23u, 0x58u, (uint16)(uint32)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x0000
             -0080u) },        /* TD 87 */
 523   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) }, /* TD 88
             - */
 524   1              };
 525   1      
 526   1              DMA_ZERO_VAL = 0u;
 527   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG0, 0x10u);    /* set burstcnt */
 528   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_CFG, 0x01u);   /* enable ch0 */
 529   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH0_BASIC_STATUS+1u), 0x00u);   /* set first TD to 0 */
 530   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD0, 88u*8u);       /* transfer size */
 531   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+2u), 0x01u);    /* set next TD to 1 */
 532   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+3u), 0xA3u);    /* set TD flags */
 533   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD1, (uint16)((uint32)CFG_TD_LIST0 & 0x0000FFFFu)); /
             -* set td0's src addr */
 534   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD1+2u), CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst a
             -ddr */
 535   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG1, (uint16)(CYDEV_FLS_BASE >> 16));  /* set ch0's src h
             -igh addr */
 536   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_CFGMEM0_CFG1+2u), (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));     /* se
             -t ch0's dst high addr */
 537   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH1_BASIC_STATUS+1u), 0x0Bu);   /* ch1 first TD: 11 */
 538   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH2_BASIC_STATUS+1u), 0x0Cu);   /* ch2 first TD: 12 */
 539   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH4_BASIC_STATUS+1u), 0x12u);   /* ch4 first TD: 18 */
 540   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH5_BASIC_STATUS+1u), 0x19u);   /* ch5 first TD: 25 */
 541   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH6_BASIC_STATUS+1u), 0x21u);   /* ch6 first TD: 33 */
 542   1      
 543   1              CY_CFG_MEMORY_BARRIER();
 544   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_ACTION, 0x01u); /* cpu_req */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 12  

 545   1              CY_CFG_MEMORY_BARRIER();
 546   1      
 547   1              /* Wait for all DMA transfers to complete */
 548   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 549   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 550   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 551   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 552   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 553   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 554   1      
 555   1      
 556   1              CYCONFIGCPY((void CYFAR *)(CYREG_IDMUX_DRQ_CTL0), (const void CYFAR *)(BS_IDMUX_VAL), 6u);
 557   1      
 558   1      }
 559          /*******************************************************************************
 560          * Function Name: ClockSetup
 561          ********************************************************************************
 562          *
 563          * Summary:
 564          *  Performs the initialization of all of the clocks in the device based on the
 565          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 566          *  clocks and setting the necessary dividers to produce the desired frequency. 
 567          *
 568          * Parameters:
 569          *  void
 570          *
 571          * Return:
 572          *  void
 573          *
 574          *******************************************************************************/
 575          static void ClockSetup(void);
 576          static void ClockSetup(void)
 577          {
 578   1              /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 579   1              DMAINITSEC static const uint8 CYCODE BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL[] = {
 580   1                      0x15u, 0x00u, 0x18u, 0x01u};
 581   1      
 582   1              uint32 timeout;
 583   1              uint8 pllLock;
 584   1      
 585   1      
 586   1              /* Configure Digital Clocks based on settings from Clock DWR */
 587   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0002u);
 588   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 589   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0000u);
 590   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x50u);
 591   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0017u);
 592   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 593   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x002Fu);
 594   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x18u);
 595   1      
 596   1              /* Configure Analog Clocks based on settings from Clock DWR */
 597   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYCODE *)(BS_CYDEV_CLKDIST_ACFG0_CF
             -G0_VAL), 4u);
 598   1      
 599   1              /* Configure ILO based on settings from Clock DWR */
 600   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 601   1      
 602   1              /* Configure IMO based on settings from Clock DWR */
 603   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 604   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 13  

 605   1      
 606   1              /* Configure PLL based on settings from Clock DWR */
 607   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0710u);
 608   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 609   1              /* Wait up to 250us for the PLL to lock */
 610   1              pllLock = 0u;
 611   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 612   1              { 
 613   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 614   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 615   2              }
 616   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 617   1              if (timeout == 0u)
 618   1              {
 619   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 620   2              }
 621   1      
 622   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 623   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 624   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 625   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 626   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 627   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 628   1      
 629   1              /* Configure USB Clock based on settings from Clock DWR */
 630   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 631   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 632   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 633   1      
 634   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x0Fu
             -)));
 635   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 636   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 637   1      }
 638          
 639          
 640          /* Analog API Functions */
 641          
 642          
 643          /*******************************************************************************
 644          * Function Name: AnalogSetDefault
 645          ********************************************************************************
 646          *
 647          * Summary:
 648          *  Sets up the analog portions of the chip to default values based on chip
 649          *  configuration options from the project.
 650          *
 651          * Parameters:
 652          *  void
 653          *
 654          * Return:
 655          *  void
 656          *
 657          *******************************************************************************/
 658          static void AnalogSetDefault(void);
 659          static void AnalogSetDefault(void)
 660          {
 661   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 662   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 14  

 663   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 664   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT1_AG, 0x01u);
 665   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT15_AG, 0x08u);
 666   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x81u);
 667   1              CY_SET_REG8((void CYXDATA *)CYREG_BUS_SW0, 0x81u);
 668   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 669   1      }
 670          
 671          
 672          /*******************************************************************************
 673          * Function Name: SetAnalogRoutingPumps
 674          ********************************************************************************
 675          *
 676          * Summary:
 677          * Enables or disables the analog pumps feeding analog routing switches.
 678          * Intended to be called at startup, based on the Vdda system configuration;
 679          * may be called during operation when the user informs us that the Vdda voltage
 680          * crossed the pump threshold.
 681          *
 682          * Parameters:
 683          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 684          *
 685          * Return:
 686          *  void
 687          *
 688          *******************************************************************************/
 689          void SetAnalogRoutingPumps(uint8 enabled)
 690          {
 691   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 692   1              if (enabled != 0u)
 693   1              {
 694   2                      regValue |= 0x22u;
 695   2              }
 696   1              else
 697   1              {
 698   2                      regValue &= (uint8)~0x22u;
 699   2              }
 700   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 701   1      }
 702          
 703          
 704          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 705          /* This is an implementation detail of the AMux. Code that depends on it may be
 706             incompatible with other versions of PSoC Creator. */
 707          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 708                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 709                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 710          };
 711          
 712          /* This is an implementation detail of the AMux. Code that depends on it may be
 713             incompatible with other versions of PSoC Creator. */
 714          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 715                  0x40u, 
 716                  0x00u, 
 717          };
 718          
 719          /*******************************************************************************
 720          * Function Name: ADC_AMux_Set
 721          ********************************************************************************
 722          * Summary:
 723          *  This function is used to set a particular channel as active on the AMux.
 724          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 15  

 725          * Parameters:  
 726          *   channel - The mux channel input to set as active
 727          *
 728          * Return:
 729          *   void
 730          *
 731          *******************************************************************************/
 732          void ADC_AMux_Set(uint8 channel)
 733          {
 734   1              if (channel < 2)
 735   1              {
 736   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 737   2              }
 738   1      }
 739          
 740          /*******************************************************************************
 741          * Function Name: ADC_AMux_Unset
 742          ********************************************************************************
 743          * Summary:
 744          *  This function is used to clear a particular channel from being active on the
 745          *  AMux.
 746          *
 747          * Parameters:  
 748          *   channel - The mux channel input to mark inactive
 749          *
 750          * Return:
 751          *   void
 752          *
 753          *******************************************************************************/
 754          void ADC_AMux_Unset(uint8 channel)
 755          {
 756   1              if (channel < 2)
 757   1              {
 758   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 759   2              }
 760   1      }
 761          
 762          
 763          
 764          /*******************************************************************************
 765          * Function Name: cyfitter_cfg
 766          ********************************************************************************
 767          * Summary:
 768          *  This function is called by the start-up code for the selected device. It
 769          *  performs all of the necessary device configuration based on the design
 770          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 771          *  as Clocks and Pins as well as any component configuration that is necessary.
 772          *
 773          * Parameters:
 774          *   void
 775          *
 776          * Return:
 777          *   void
 778          *
 779          *******************************************************************************/
 780          
 781          void cyfitter_cfg(void)
 782          {
 783   1              /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
 784   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 785   1                      0x00u, 0x00u, 0x00u, 0xFEu, 0xFAu, 0x00u, 0xF2u, 0x01u, 0x01u, 0x00u};
 786   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 16  

 787   1              /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 788   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 789   1                      0x30u, 0xD8u, 0xC8u, 0x00u, 0xD8u, 0x00u, 0x00u, 0x00u};
 790   1      
 791   1              /* PHUB_CFGMEM10 Address: CYREG_PHUB_CFGMEM10_CFG0 Size (bytes): 4 */
 792   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM10_VAL[] = {
 793   1                      0x00u, 0x0Au, 0x00u, 0x00u};
 794   1      
 795   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 796   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x01u));
 797   1      
 798   1              {
 799   2                      cfg_dma_init();
 800   2      
 801   2                      /* Perform normal device configuration. Order is not critical for these items. */
 802   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 803   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM10_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM10_VAL), 4
             -u);
 804   2      
 805   2                      /* Enable digital routing */
 806   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 807   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 808   2      
 809   2                      /* Enable UDB array */
 810   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 811   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 812   2              }
 813   1      
 814   1      
 815   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 816   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 817   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 818   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DM0), (const void CYFAR *)(BS_IOPINS0_8_VAL), 8u);
 819   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DR), (const void CYCODE *)(BS_IOPINS0_1_VAL), 10u);
 820   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (const void CYCODE *)(BS_IOPINS0_2_VAL), 8u);
 821   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 822   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 823   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 824   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 825   1              {
 826   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 827   2              }
 828   1      
 829   1      
 830   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 831   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 832   1              /* Setup clocks based on selections from Clock DWR */
 833   1              ClockSetup();
 834   1      
 835   1              /* Perform basic analog initialization to defaults */
 836   1              AnalogSetDefault();
 837   1      
 838   1              /* Configure alternate active mode */
 839   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 840   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 841   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 17  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 77
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 80
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 98
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 526
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#DMA_ZERO_VAL
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 527
000E 907600            MOV     DPTR,#07600H
0011 7410              MOV     A,#010H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 528
0014 907010            MOV     DPTR,#07010H
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 529
001A 907019            MOV     DPTR,#07019H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 530
001F 7B02              MOV     R3,#02H
0021 7A78              MOV     R2,#078H
0023 7900              MOV     R1,#00H
0025 7DC0              MOV     R5,#0C0H
0027 7C02              MOV     R4,#02H
0029 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 531
002C 907802            MOV     DPTR,#07802H
002F 7401              MOV     A,#01H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 532
0032 907803            MOV     DPTR,#07803H
0035 74A3              MOV     A,#0A3H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 533
0038 7B02              MOV     R3,#02H
003A 7A78              MOV     R2,#078H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 18  

003C 7904              MOV     R1,#04H
003E C003              PUSH    AR3
0040 C002              PUSH    AR2
0042 C001              PUSH    AR1
0044 7BFF              MOV     R3,#0FFH
0046 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0048 7900        R     MOV     R1,#LOW CFG_TD_LIST0
004A AF01              MOV     R7,AR1
004C AE02              MOV     R6,AR2
004E AD03              MOV     R5,AR3
0050 7C00              MOV     R4,#00H
0052 EF                MOV     A,R7
0053 54FF              ANL     A,#0FFH
0055 FF                MOV     R7,A
0056 EE                MOV     A,R6
0057 54FF              ANL     A,#0FFH
0059 FE                MOV     R6,A
005A ED                MOV     A,R5
005B 5400              ANL     A,#00H
005D FD                MOV     R5,A
005E EC                MOV     A,R4
005F 5400              ANL     A,#00H
0061 FC                MOV     R4,A
0062 AD07              MOV     R5,AR7
0064 AC06              MOV     R4,AR6
0066 D001              POP     AR1
0068 D002              POP     AR2
006A D003              POP     AR3
006C 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 534
006F 7B02              MOV     R3,#02H
0071 7A78              MOV     R2,#078H
0073 7906              MOV     R1,#06H
0075 7D08              MOV     R5,#08H
0077 7C78              MOV     R4,#078H
0079 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 535
007C 7B02              MOV     R3,#02H
007E 7A76              MOV     R2,#076H
0080 7904              MOV     R1,#04H
0082 7D10              MOV     R5,#010H
0084 7C00              MOV     R4,#00H
0086 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 536
0089 7B02              MOV     R3,#02H
008B 7A76              MOV     R2,#076H
008D 7906              MOV     R1,#06H
008F 7D00              MOV     R5,#00H
0091 7C00              MOV     R4,#00H
0093 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 537
0096 907029            MOV     DPTR,#07029H
0099 740B              MOV     A,#0BH
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 538
009C 907039            MOV     DPTR,#07039H
009F 740C              MOV     A,#0CH
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 539
00A2 907059            MOV     DPTR,#07059H
00A5 7412              MOV     A,#012H
00A7 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 19  

                                           ; SOURCE LINE # 540
00A8 907069            MOV     DPTR,#07069H
00AB 7419              MOV     A,#019H
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 541
00AE 907079            MOV     DPTR,#07079H
00B1 7421              MOV     A,#021H
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 544
00B4 907014            MOV     DPTR,#07014H
00B7 7401              MOV     A,#01H
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 545
00BA         ?C0010:
                                           ; SOURCE LINE # 548
00BA 907018            MOV     DPTR,#07018H
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 5401              ANL     A,#01H
00C2 FF                MOV     R7,A
00C3 7E00              MOV     R6,#00H
00C5 EF                MOV     A,R7
00C6 4E                ORL     A,R6
00C7 70F1              JNZ     ?C0010
00C9         ?C0011:
00C9         ?C0012:
                                           ; SOURCE LINE # 549
00C9 907028            MOV     DPTR,#07028H
00CC E0                MOVX    A,@DPTR
00CD FF                MOV     R7,A
00CE EF                MOV     A,R7
00CF 5401              ANL     A,#01H
00D1 FF                MOV     R7,A
00D2 7E00              MOV     R6,#00H
00D4 EF                MOV     A,R7
00D5 4E                ORL     A,R6
00D6 70F1              JNZ     ?C0012
00D8         ?C0013:
00D8         ?C0014:
                                           ; SOURCE LINE # 550
00D8 907038            MOV     DPTR,#07038H
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 5401              ANL     A,#01H
00E0 FF                MOV     R7,A
00E1 7E00              MOV     R6,#00H
00E3 EF                MOV     A,R7
00E4 4E                ORL     A,R6
00E5 70F1              JNZ     ?C0014
00E7         ?C0015:
00E7         ?C0016:
                                           ; SOURCE LINE # 551
00E7 907058            MOV     DPTR,#07058H
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC EF                MOV     A,R7
00ED 5401              ANL     A,#01H
00EF FF                MOV     R7,A
00F0 7E00              MOV     R6,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 20  

00F2 EF                MOV     A,R7
00F3 4E                ORL     A,R6
00F4 70F1              JNZ     ?C0016
00F6         ?C0017:
00F6         ?C0018:
                                           ; SOURCE LINE # 552
00F6 907068            MOV     DPTR,#07068H
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC 5401              ANL     A,#01H
00FE FF                MOV     R7,A
00FF 7E00              MOV     R6,#00H
0101 EF                MOV     A,R7
0102 4E                ORL     A,R6
0103 70F1              JNZ     ?C0018
0105         ?C0019:
0105         ?C0020:
                                           ; SOURCE LINE # 553
0105 907078            MOV     DPTR,#07078H
0108 E0                MOVX    A,@DPTR
0109 FF                MOV     R7,A
010A EF                MOV     A,R7
010B 5401              ANL     A,#01H
010D FF                MOV     R7,A
010E 7E00              MOV     R6,#00H
0110 EF                MOV     A,R7
0111 4E                ORL     A,R6
0112 70F1              JNZ     ?C0020
0114         ?C0021:
                                           ; SOURCE LINE # 556
0114 7B08              MOV     R3,#08H
0116 7A04              MOV     R2,#04H
0118 79C0              MOV     R1,#0C0H
011A C003              PUSH    AR3
011C C002              PUSH    AR2
011E C001              PUSH    AR1
0120 7B01              MOV     R3,#01H
0122 7A51              MOV     R2,#051H
0124 7910              MOV     R1,#010H
0126 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0129 120000      E     LCALL   ?C?PSTXDATA
012C D001              POP     AR1
012E D002              POP     AR2
0130 D003              POP     AR3
0132 7F06              MOV     R7,#06H
0134 7E00              MOV     R6,#00H
0136 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 558
0139 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 576
                                           ; SOURCE LINE # 577
                                           ; SOURCE LINE # 587
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D02              MOV     R5,#02H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 21  

                                           ; SOURCE LINE # 588
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 589
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D00              MOV     R5,#00H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 590
0020 904086            MOV     DPTR,#04086H
0023 7450              MOV     A,#050H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D17              MOV     R5,#017H
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 592
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 593
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
003F 7D2F              MOV     R5,#02FH
0041 7C00              MOV     R4,#00H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 594
0046 90408E            MOV     DPTR,#0408EH
0049 7418              MOV     A,#018H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 597
004C 7C00        R     MOV     R4,#HIGH BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
004E 7D00        R     MOV     R5,#LOW BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0050 7B00              MOV     R3,#00H
0052 7A41              MOV     R2,#041H
0054 7900              MOV     R1,#00H
0056 7F04              MOV     R7,#04H
0058 7E00              MOV     R6,#00H
005A 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 600
005D 904300            MOV     DPTR,#04300H
0060 7406              MOV     A,#06H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 603
0063 904200            MOV     DPTR,#04200H
0066 7452              MOV     A,#052H
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
0069 7B0C              MOV     R3,#0CH
006B 7A01              MOV     R2,#01H
006D 790F              MOV     R1,#0FH
006F 120000      E     LCALL   _cyread8
0072 9046A1            MOV     DPTR,#046A1H
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 22  

                                           ; SOURCE LINE # 607
0077 7B00              MOV     R3,#00H
0079 7A42              MOV     R2,#042H
007B 7922              MOV     R1,#022H
007D 7D10              MOV     R5,#010H
007F 7C07              MOV     R4,#07H
0081 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 608
0084 7B00              MOV     R3,#00H
0086 7A42              MOV     R2,#042H
0088 7920              MOV     R1,#020H
008A 7D51              MOV     R5,#051H
008C 7C12              MOV     R4,#012H
008E 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 610
0091 900000      R     MOV     DPTR,#pllLock
0094 E4                CLR     A
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
0096 7F19              MOV     R7,#019H
0098 7E00              MOV     R6,#00H
009A 7D00              MOV     R5,#00H
009C 7C00              MOV     R4,#00H
009E 900000      R     MOV     DPTR,#timeout
00A1 120000      E     LCALL   ?C?LSTXDATA
00A4         ?C0023:
00A4 900000      R     MOV     DPTR,#timeout
00A7 120000      E     LCALL   ?C?LLDXDATA
00AA D3                SETB    C
00AB EF                MOV     A,R7
00AC 9400              SUBB    A,#00H
00AE EE                MOV     A,R6
00AF 9400              SUBB    A,#00H
00B1 404E              JC      ?C0024
00B3 900000      R     MOV     DPTR,#pllLock
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 EF                MOV     A,R7
00B9 6403              XRL     A,#03H
00BB 6044              JZ      ?C0024
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 613
00BD 904225            MOV     DPTR,#04225H
00C0 E0                MOVX    A,@DPTR
00C1 FF                MOV     R7,A
00C2 EF                MOV     A,R7
00C3 5401              ANL     A,#01H
00C5 FF                MOV     R7,A
00C6 7E00              MOV     R6,#00H
00C8 900000      R     MOV     DPTR,#pllLock
00CB E0                MOVX    A,@DPTR
00CC FE                MOV     R6,A
00CD EE                MOV     A,R6
00CE 25E0              ADD     A,ACC
00D0 FE                MOV     R6,A
00D1 EE                MOV     A,R6
00D2 4F                ORL     A,R7
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 5403              ANL     A,#03H
00D7 FF                MOV     R7,A
00D8 900000      R     MOV     DPTR,#pllLock
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 23  

00DB EF                MOV     A,R7
00DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 614
00DD 7FE0              MOV     R7,#0E0H
00DF 7E01              MOV     R6,#01H
00E1 7D00              MOV     R5,#00H
00E3 7C00              MOV     R4,#00H
00E5 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 615
00E8 900000      R     MOV     DPTR,#timeout
00EB 120000      E     LCALL   ?C?LLDXDATA
00EE 7BFF              MOV     R3,#0FFH
00F0 7AFF              MOV     R2,#0FFH
00F2 79FF              MOV     R1,#0FFH
00F4 78FF              MOV     R0,#0FFH
00F6 120000      E     LCALL   ?C?LADD
00F9 900000      R     MOV     DPTR,#timeout
00FC 120000      E     LCALL   ?C?LSTXDATA
00FF 80A3              SJMP    ?C0023
0101         ?C0024:
                                           ; SOURCE LINE # 617
0101 900000      R     MOV     DPTR,#timeout
0104 120000      E     LCALL   ?C?LLDXDATA
0107 EF                MOV     A,R7
0108 4E                ORL     A,R6
0109 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 619
010B 7F03              MOV     R7,#03H
010D 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 620
0110         ?C0026:
                                           ; SOURCE LINE # 623
0110 7B00              MOV     R3,#00H
0112 7A40              MOV     R2,#040H
0114 7904              MOV     R1,#04H
0116 7D00              MOV     R5,#00H
0118 7C01              MOV     R4,#01H
011A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 624
011D 904004            MOV     DPTR,#04004H
0120 7407              MOV     A,#07H
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 625
0123 904006            MOV     DPTR,#04006H
0126 E4                CLR     A
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 626
0128 904008            MOV     DPTR,#04008H
012B 7448              MOV     A,#048H
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
012E 904004            MOV     DPTR,#04004H
0131 E4                CLR     A
0132 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
0133 904009            MOV     DPTR,#04009H
0136 E4                CLR     A
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
0138 904001            MOV     DPTR,#04001H
013B 7402              MOV     A,#02H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 24  

013D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
013E 90400B            MOV     DPTR,#0400BH
0141 7404              MOV     A,#04H
0143 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 634
0144 9043A2            MOV     DPTR,#043A2H
0147 E0                MOVX    A,@DPTR
0148 FF                MOV     R7,A
0149 EF                MOV     A,R7
014A 440F              ORL     A,#0FH
014C FF                MOV     R7,A
014D 9043A2            MOV     DPTR,#043A2H
0150 EF                MOV     A,R7
0151 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
0152 9043A1            MOV     DPTR,#043A1H
0155 E0                MOVX    A,@DPTR
0156 FF                MOV     R7,A
0157 EF                MOV     A,R7
0158 4401              ORL     A,#01H
015A FF                MOV     R7,A
015B 9043A1            MOV     DPTR,#043A1H
015E EF                MOV     A,R7
015F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
0160 9043A0            MOV     DPTR,#043A0H
0163 E0                MOVX    A,@DPTR
0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 4480              ORL     A,#080H
0168 FF                MOV     R7,A
0169 9043A0            MOV     DPTR,#043A0H
016C EF                MOV     A,R7
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
016E 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 659
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 661
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 662
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 25  

001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
002F 90511D            MOV     DPTR,#0511DH
0032 7401              MOV     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 665
0035 9051FD            MOV     DPTR,#051FDH
0038 7408              MOV     A,#08H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 666
003B 905B00            MOV     DPTR,#05B00H
003E 7481              MOV     A,#081H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 667
0041 905B58            MOV     DPTR,#05B58H
0044 7481              MOV     A,#081H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
0047 905876            MOV     DPTR,#05876H
004A 7444              MOV     A,#044H
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 669
004D 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 689
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 690
                                           ; SOURCE LINE # 691
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0029
                                           ; SOURCE LINE # 693
                                           ; SOURCE LINE # 694
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 26  

001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
0025 800E              SJMP    ?C0030
0027         ?C0029:
                                           ; SOURCE LINE # 697
                                           ; SOURCE LINE # 698
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
0035         ?C0030:
                                           ; SOURCE LINE # 700
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 701
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 732
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 733
                                           ; SOURCE LINE # 734
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0033
                                           ; SOURCE LINE # 735
                                           ; SOURCE LINE # 736
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 27  

0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
                                           ; SOURCE LINE # 738
0046         ?C0033:
0046 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 754
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 755
                                           ; SOURCE LINE # 756
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0035
                                           ; SOURCE LINE # 757
                                           ; SOURCE LINE # 758
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 28  

002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 759
                                           ; SOURCE LINE # 760
0049         ?C0035:
0049 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 781
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 796
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4401              ORL     A,#01H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
0016 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 802
0019 905883            MOV     DPTR,#05883H
001C 740A              MOV     A,#0AH
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 803
001F 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM10_VAL
0021 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM10_VAL
0023 7B00              MOV     R3,#00H
0025 7A76              MOV     R2,#076H
0027 7950              MOV     R1,#050H
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 806
0030 7B01              MOV     R3,#01H
0032 7A50              MOV     R2,#050H
0034 7903              MOV     R1,#03H
0036 120000      E     LCALL   _cyread8
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 29  

0039 EF                MOV     A,R7
003A 4402              ORL     A,#02H
003C FD                MOV     R5,A
003D 7B01              MOV     R3,#01H
003F 7A50              MOV     R2,#050H
0041 7903              MOV     R1,#03H
0043 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 807
0046 7B01              MOV     R3,#01H
0048 7A50              MOV     R2,#050H
004A 7913              MOV     R1,#013H
004C 120000      E     LCALL   _cyread8
004F EF                MOV     A,R7
0050 4402              ORL     A,#02H
0052 FD                MOV     R5,A
0053 7B01              MOV     R3,#01H
0055 7A50              MOV     R2,#050H
0057 7913              MOV     R1,#013H
0059 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 810
005C 9043A0            MOV     DPTR,#043A0H
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 4440              ORL     A,#040H
0064 FF                MOV     R7,A
0065 9043A0            MOV     DPTR,#043A0H
0068 EF                MOV     A,R7
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 811
006A 9043C2            MOV     DPTR,#043C2H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 4410              ORL     A,#010H
0072 FF                MOV     R7,A
0073 9043C2            MOV     DPTR,#043C2H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 812
                                           ; SOURCE LINE # 816
0078 7B08              MOV     R3,#08H
007A 7A1F              MOV     R2,#01FH
007C 79E4              MOV     R1,#0E4H
007E C003              PUSH    AR3
0080 C002              PUSH    AR2
0082 C001              PUSH    AR1
0084 7B00              MOV     R3,#00H
0086 7A51              MOV     R2,#051H
0088 7902              MOV     R1,#02H
008A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
008D 120000      E     LCALL   ?C?PSTXDATA
0090 D001              POP     AR1
0092 D002              POP     AR2
0094 D003              POP     AR3
0096 7F08              MOV     R7,#08H
0098 7E00              MOV     R6,#00H
009A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 817
009D 7B08              MOV     R3,#08H
009F 7A1F              MOV     R2,#01FH
00A1 79EC              MOV     R1,#0ECH
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 30  

00A3 C003              PUSH    AR3
00A5 C002              PUSH    AR2
00A7 C001              PUSH    AR1
00A9 7B00              MOV     R3,#00H
00AB 7A51              MOV     R2,#051H
00AD 79C2              MOV     R1,#0C2H
00AF 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00B2 120000      E     LCALL   ?C?PSTXDATA
00B5 D001              POP     AR1
00B7 D002              POP     AR2
00B9 D003              POP     AR3
00BB 7F08              MOV     R7,#08H
00BD 7E00              MOV     R6,#00H
00BF 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 818
00C2 7B08              MOV     R3,#08H
00C4 7A1F              MOV     R2,#01FH
00C6 79F4              MOV     R1,#0F4H
00C8 C003              PUSH    AR3
00CA C002              PUSH    AR2
00CC C001              PUSH    AR1
00CE 7B00              MOV     R3,#00H
00D0 7A51              MOV     R2,#051H
00D2 79F2              MOV     R1,#0F2H
00D4 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00D7 120000      E     LCALL   ?C?PSTXDATA
00DA D001              POP     AR1
00DC D002              POP     AR2
00DE D003              POP     AR3
00E0 7F08              MOV     R7,#08H
00E2 7E00              MOV     R6,#00H
00E4 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 819
00E7 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
00E9 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
00EB 7B00              MOV     R3,#00H
00ED 7A51              MOV     R2,#051H
00EF 7910              MOV     R1,#010H
00F1 7F0A              MOV     R7,#0AH
00F3 7E00              MOV     R6,#00H
00F5 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 820
00F8 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00FA 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00FC 7B00              MOV     R3,#00H
00FE 7A51              MOV     R2,#051H
0100 7922              MOV     R1,#022H
0102 7F08              MOV     R7,#08H
0104 7E00              MOV     R6,#00H
0106 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 821
0109 9044F4            MOV     DPTR,#044F4H
010C 7401              MOV     A,#01H
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 823
010F 904322            MOV     DPTR,#04322H
0112 E0                MOVX    A,@DPTR
0113 FF                MOV     R7,A
0114 EF                MOV     A,R7
0115 4408              ORL     A,#08H
0117 FF                MOV     R7,A
0118 904322            MOV     DPTR,#04322H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 31  

011B EF                MOV     A,R7
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 824
011D 9046EC            MOV     DPTR,#046ECH
0120 E0                MOVX    A,@DPTR
0121 FF                MOV     R7,A
0122 EF                MOV     A,R7
0123 C3                CLR     C
0124 9405              SUBB    A,#05H
0126 5006              JNC     ?C0036
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0128 904689            MOV     DPTR,#04689H
012B 743A              MOV     A,#03AH
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 827
012E         ?C0036:
                                           ; SOURCE LINE # 831
012E 904800            MOV     DPTR,#04800H
0131 74F1              MOV     A,#0F1H
0133 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 833
0134 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 836
0137 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 839
013A 7B00              MOV     R3,#00H
013C 7A43              MOV     R2,#043H
013E 79A0              MOV     R1,#0A0H
0140 C003              PUSH    AR3
0142 C002              PUSH    AR2
0144 C001              PUSH    AR1
0146 7B00              MOV     R3,#00H
0148 7A43              MOV     R2,#043H
014A 79B0              MOV     R1,#0B0H
014C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
014F 120000      E     LCALL   ?C?PSTXDATA
0152 D001              POP     AR1
0154 D002              POP     AR2
0156 D003              POP     AR3
0158 7F0E              MOV     R7,#0EH
015A 7E00              MOV     R6,#00H
015C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 840
015F 9043B0            MOV     DPTR,#043B0H
0162 E0                MOVX    A,@DPTR
0163 FF                MOV     R7,A
0164 EF                MOV     A,R7
0165 54FD              ANL     A,#0FDH
0167 FF                MOV     R7,A
0168 EF                MOV     A,R7
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 841
016A 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1349    ----
   CONSTANT SIZE    =   1677    ----
   XDATA SIZE       =      4      11
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/01/2019 12:07:29 PAGE 32  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
